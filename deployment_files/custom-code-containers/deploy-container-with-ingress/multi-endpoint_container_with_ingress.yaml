# this values file will deploy the container, create the service and
# then create the multi-endpoint ingress 
# The container is from my facial recognition project:
# https://github.com/MarkhamLee/Facial-Recognition-Facenet-Pytorch
apiVersion: apps/v1
kind: Deployment
metadata:
  name: facenet
  namespace: operations
spec:
  selector:
    matchLabels:
      app: facenet
  replicas: 1
  template:
    metadata:
      labels:
        app: facenet
    spec:
      containers:
        - name: facenet-pytorch-wrapper
          image: markhamlee/facerec:latest  # this is my private repo, replace with your own
          imagePullPolicy: Always
          ports:
          - containerPort: 6000 #this would be the port that is exposed in your Dockerfile
          resources:
            limits:
              cpu: 6000m
              memory: 8000Mi
            requests:
              cpu: 1000m # reserves at least one core to deliver near stand-alone/outside of k3s performance
              memory: 4000Mi
      imagePullSecrets: 
        - name: private-docker-repo
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: facenet
  namespace: operations
spec:
  ports:
  - port: 80
    targetPort: 6000
    name: http
  selector:
    app: facenet
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: facenet-ingress
  namespace: operations
spec:
  rules:
    - host: facenet.local.example.com
      http:
        paths: # note creating a path for each of your container's endpoints
          - backend:
              service:
                name: facenet
                port:
                  number: 80
            path: /cached_data
            pathType: Prefix
          - backend:
              service:
                name: facenet
                port:
                  number: 80
            path: /ping
            pathType: Prefix
          - backend:
              service:
                name: facenet
                port:
                  number: 80
            path: /identity
            pathType: Prefix
  tls:
  - hosts:
    - local.example.com 
    secretName: your-secret-name-tls